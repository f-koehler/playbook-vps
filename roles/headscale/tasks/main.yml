- name: Create btrfs subvolumes.
  btrfs_subvolume:
    path: /home/headscale/volumes/{{ subvolume }}
    state: present
    owner: headscale
    group: headscale
  loop:
    - db
    - app
  loop_control:
    loop_var: subvolume

- name: Create network.
  become: true
  become_user: "headscale"
  containers.podman.podman_network:
    name: headscale
    internal: true

- name: Create db container.
  become: true
  become_user: "headscale"
  containers.podman.podman_container:
    name: headscale_db
    image: "docker.io/postgres:14"
    image_strict: true
    restart_policy: always
    log_driver: "k8s-file"
    env:
      POSTGRES_PASSWORD: "{{ headscale.db.password }}"
      POSTGRES_USER: headscale
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: headscale
    network:
      - headscale
    volumes:
      - "/home/headscale/volumes/db:/var/lib/postgresql/data:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"

- name: Create app container.
  become: true
  become_user: "headscale"
  containers.podman.podman_container:
    name: headscale_app
    image: "docker.io/headscale/headscale:0.16-alpine"
    image_strict: true
    restart_policy: always
    log_driver: "k8s-file"
    command: headscale serve
    network:
      - headscale
    volumes:
      - "/home/headscale/volumes/app:/var/lib/headscale:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"
# ######
# - name: Symlink cert files.
#   ansible.builtin.file:
#     src: "/etc/letsencrypt/live/{{ subdomains[0] }}.{{ domain }}/{{ cert_file }}"
#     dest: "~/docker-compose/headscale/{{ cert_file }}"
#     state: link
#     mode: "0600"
#     owner: "101"
#     group: "101"
#   loop:
#     - cert.pem
#     - chain.pem
#     - fullchain.pem
#     - privkey.pem
#     - dhparams.pem
#   loop_control:
#     loop_var: cert_file
#   notify:
#     - Restart headscale.

# - name: Generate headscale config.
#   ansible.builtin.template:
#     src: headscale.yaml
#     dest: ~/docker-compose/headscale/headscale.yaml
#     mode: "0600"
#   notify:
#     - Restart headscale.

# - name: Generate nginx config.
#   ansible.builtin.template:
#     src: nginx.conf
#     dest: ~/docker-compose/headscale/nginx.conf
#     owner: "101"
#     group: "101"
#     mode: "0600"
#   notify:
#     - Restart headscale.

# - name: Generate headscale docker-compose file.
#   ansible.builtin.template:
#     src: docker-compose.yml
#     dest: ~/docker-compose/headscale/docker-compose.yml
#     mode: "0600"

# - name: Start headscale containers.
#   community.docker.docker_compose:
#     project_src: "~/docker-compose/headscale"
#     pull: true
#     build: true
