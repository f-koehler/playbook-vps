- name: Create btrfs subvolumes.
  btrfs_subvolume:
    path: /home/paperless/volumes/{{ subvolume }}
    state: present
    owner: paperless
    group: paperless
  loop:
    - db
    - app
    - app/data
    - app/media
    - app/consume
    - app/export
    - cache
    - protonmail
  loop_control:
    loop_var: subvolume

- name: Create pod.
  become: true
  become_user: "paperless"
  containers.podman.podman_pod:
    name: paperless
    state: started

- name: Create cache container.
  become: true
  become_user: paperless
  containers.podman.podman_container:
    name: cache
    image: "docker.io/redis:7-alpine"
    image_strict: true
    restart_policy: always
    pod: paperless
    log_driver: "k8s-file"
    volumes:
      - "/home/paperless/volumes/cache:/data:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"

- name: Create db container.
  become: true
  become_user: paperless
  containers.podman.podman_container:
    name: db
    image: "docker.io/postgres:14"
    image_strict: true
    restart_policy: always
    pod: paperless
    log_driver: "k8s-file"
    env:
      POSTGRES_PASSWORD: "{{ paperless.db.password }}"
      POSTGRES_USER: paperless
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: paperless
    volumes:
      - "/home/paperless/volumes/db:/var/lib/postgresql/data:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"

- name: Create gotenberg container.
  become: true
  become_user: paperless
  containers.podman.podman_container:
    name: gotenberg
    image: "docker.io/gotenberg/gotenberg:7"
    image_strict: true
    restart_policy: always
    pod: paperless
    log_driver: "k8s-file"
    env:
      CHROMIUM_DISABLE_ROUTES: 1
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"

- name: Create tika container.
  become: true
  become_user: paperless
  containers.podman.podman_container:
    name: tika
    image: "docker.io/apache/tika:2.4.1-full"
    image_strict: true
    restart_policy: always
    pod: paperless
    log_driver: "k8s-file"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"

- name: Create protonmail container.
  become: true
  become_user: paperless
  containers.podman.podman_container:
    name: protonmail
    image: "docker.io/shenxn/protonmail-bridge:latest"
    image_strict: true
    restart_policy: always
    pod: paperless
    log_driver: "k8s-file"
    volumes:
      - "/home/paperless/volumes/protonmail:/root:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"

- name: Create app container.
  become: true
  become_user: paperless
  containers.podman.podman_container:
    name: paperless_app
    image: "ghcr.io/paperless-ngx/paperless-ngx:1.9.2"
    image_strict: true
    requires:
      - cache
      - db
      - gotenberg
      - tika
      - protonmail
    restart_policy: always
    pod: paperless
    log_driver: "k8s-file"
    env:
      PAPERLESS_REDIS: redis://paperless_cache:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: "http://paperless_gotenberg:3000"
      PAPERLESS_TIKA_ENDPOINT: "http://paperless_tika:9998"
      PAPERLESS_OCR_LANGUAGES: "deu eng"
      PAPERLESS_OCR_LANGUAGE: "deu"
      PAPERLESS_TIME_ZONE: Europe/Berlin
      PAPERLESS_SECRET_KEY: "{{ paperless.secret }}"
      PAPERLESS_DBPASS: "{{ paperless.db.password }}"
      PAPERLESS_ADMIN_USER: "{{ paperless.admin.user }}"
      PAPERLESS_ADMIN_PASSWORD: "{{ paperless.admin.password }}"
      PAPERLESS_URL: "https://paperless.svc.fkoehler.xyz"
    volumes:
      - "/home/paperless/volumes/db:/var/lib/postgresql/data:rw"
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/usr/share/zoneinfo:/usr/share/zoneinfo:ro"
